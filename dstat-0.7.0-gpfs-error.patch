From bd234625e6c248a10703a5dd506a19d72e2033d9 Mon Sep 17 00:00:00 2001
From: "David Kaspar [Dee'Kej]" <dkaspar@redhat.com>
Date: Mon, 19 Sep 2016 16:30:50 +0200
Subject: [PATCH] fix the "(global name 'select' is not defined)" error message

  Plus use subprocess.Popen() instead of deprecated os.popen3().
---
 dstat | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/dstat b/dstat
index d8b0a52..d1ae5d4 100755
--- a/dstat
+++ b/dstat
@@ -26,7 +26,7 @@ def addpath(path):
 
 try:
     import sys, os, time, sched, re
-    import types, resource, getpass, glob
+    import types, resource, getpass, glob, select
     addpath(os.path.expanduser('~/.dstat/'))                                # home + /.dstat/
     addpath(os.path.abspath(os.path.dirname(sys.argv[0])) + '/plugins/')    # binary path + /plugins/
     addpath('/usr/share/dstat/')
@@ -1693,9 +1693,15 @@ def dclose(filename):
 def dpopen(cmd):
     "Open a pipe for reuse, if already opened, return pipes"
     global pipes
+    import subprocess, shlex
     if 'pipes' not in globals().keys(): pipes = {}
     if cmd not in pipes.keys():
-        pipes[cmd] = os.popen3(cmd, 't', 0)
+        p = subprocess.Popen(shlex.split(cmd), bufsize=0,
+                             stdin=subprocess.PIPE,
+                             stdout=subprocess.PIPE,
+                             stderr=subprocess.PIPE,
+                             close_fds=True)
+        pipes[cmd] = (p.stdin, p.stdout, p.stderr)
     return pipes[cmd]
 
 def readpipe(fileobj, tmout = 0.001):
-- 
2.9.5

